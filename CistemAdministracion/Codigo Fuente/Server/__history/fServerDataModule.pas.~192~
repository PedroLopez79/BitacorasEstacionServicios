unit fServerDataModule;

interface

uses
  SysUtils, Classes,
  uROClient, uROPoweredByRemObjectsButton, uROClientIntf, uROServer,
  uROBinMessage, uROIndyHTTPServer,
  uDAEngine, uDADriverManager, uDAClasses, uROSessions,
  uDAADODriver, uROIndyTCPServer, UtileriasComun,
  uDADataDictionary, uDAStreamableComponent, uDAConnectionManager, uROMessage,
  uROComponent, uROBaseConnection, uROCustomHTTPServer, uROBaseHTTPServer,
  uROSOAPMessage;

type
  TServerDataModule = class(TDataModule)
    Server: TROIndyHTTPServer;
    Message: TROBinMessage;
    ConnectionManager: TDAConnectionManager;
    DriverManager: TDADriverManager;
    ADODriver: TDAADODriver;
    SessionManager: TROInMemorySessionManager;
    SOAPMessage: TROSOAPMessage;
    DataDictionary: TDADataDictionary;

    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ServerDataModule: TServerDataModule;

implementation

{$R *.dfm}

procedure TServerDataModule.DataModuleCreate(Sender: TObject);
Const
  Cadena = 'SDAC?Server=%s;Database=%s;UserID=%s;Password=%s;';
begin
  RutaRegistro:='Server Clasificador';
  try
    ConnectionManager.Connections[0].ConnectionString:=Format(Cadena, [LeerRegistro('Server','127.0.0.1'),
                                                                       LeerRegistro('Database','Exporta'),
                                                                       LeerRegistro('User','sa'),
                                                                       LeerRegistro('Password','')]);
  finally
     Server.Port := StrToInt(LeerRegistro('Puerto', '8001'));
     Server.Active := True;
  end;


  Server.Active := true;
end;

end.
